version: '3.8'

services:
  
  backend:
    build:
      context: ./
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=postgres_db
        - POSTGRES_IP=postgres
        - REDIS_IP=redis
        - MONGO_IP=mongodb
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - mongodb
      - redis
      
  frontend:
    build:
      context: ./frontend/
    ports:
      - "3000:3000"
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8090:8090"
    volumes:
      - ./nginx/nginx.conf.template:/nginx.conf.template:rwx
      - ./nginx/entrypoint.sh:/entrypoint.sh:rwx
    entrypoint: ["/entrypoint.sh"]
    depends_on:
      - frontend

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  mongodb_data:
  redis_data:
